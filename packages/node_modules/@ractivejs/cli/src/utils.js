export const readFromStream = stream => {
  return new Promise((resolve, reject) => {
    const data = []
    stream.on('data', chunk => data.push(chunk))
    stream.on('end', () => resolve(Buffer.concat(data).toString('utf8')))
    stream.on('error', reject)
  })
}

export const writeToStream = (stream, string) => {
  return new Promise(resolve => {
    stream.on('drain', resolve)
    stream.write(string, 'utf8')
  })
}

// https://gist.github.com/mathiasbynens/1243213
export const escapeUnicode = string => {
  return string.replace(/[^]/g, char => {
    const code = char.charCodeAt()

    if (code < 256) return char

    const escape = code.toString(16)
    const long = escape.length > 2
    return `\\${long ? 'u' : 'x'}${('0000' + escape).slice(long ? -4 : -2)}`
  })
}
