import { pointer } from './pointer'
import { touch } from './touch'
import { mouse } from './mouse'
import { focus } from './focus'

// Select what tap method to use depending on device support
const underlyingDecorator = 'PointerEvent' in window ? pointer
  : 'TouchEvent' in window ? touch
    : mouse

// Tap is a combination of pointer/touch/mouse and a spacebar tap
export const tap = (node, fire) => {
  const isButtonLike = node.tagName === 'BUTTON' || node.type === 'button'
  const tapDecorator = underlyingDecorator(node, fire)
  const focusDecorator = isButtonLike ? focus(node, fire) : null

  return {
    teardown () {
      tapDecorator.teardown()
      if (focusDecorator) focusDecorator.teardown()
    }
  }
}
